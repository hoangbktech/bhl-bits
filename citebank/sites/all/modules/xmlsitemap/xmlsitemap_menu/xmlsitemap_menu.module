<?php
// $Id: xmlsitemap_menu.module,v 1.1.4.43 2009/05/06 21:48:59 kiam Exp $

/**
 * @file
 * Adds menu items to the sitemap.
 */

/**
 * @addtogroup xmlsitemap
 * @{
 */

/*****************************************************************************
 * Drupal hooks.
 ****************************************************************************/

/**
 * Implementation of hook_form_alter().
 */
function xmlsitemap_menu_form_alter(&$form, $form_state, $form_id) {
  switch ($form_id) {
    case 'menu_edit_item':
    case 'menu_edit_menu':
    case 'menu_overview_form':
      $form['#submit'][] = 'xmlsitemap_menu_update_sitemap_submit';
      break;
  }
}

/**
 * Implementation of hook_form_FORM_ID_alter().
 */
function xmlsitemap_menu_form_xmlsitemap_settings_alter(&$form, &$from_state) {
  $form['xmlsitemap_menu'] = array(
    '#type' => 'fieldset',
    '#title' => t('Menu settings'),
    '#description' => t('The settings for the menus to include in the sitemap.'),
    '#collapsible' => TRUE,
    '#weight' => 0,
  );
  $form['xmlsitemap_menu']['xmlsitemap_menu_menus_changefreq'] = array(
    '#type' => 'select',
    '#title' => t('Menu links change frequency'),
    '#description' => t('The change frequency associated with the menu links.'),
    '#default_value' => variable_get('xmlsitemap_menu_menus_changefreq', 3600),
    '#options' => array(
      '3600' => 'Hourly',
      '86400' => 'Daily',
      '604800' => 'Weekly',
      '2419200' => 'Monthly',
      '29030400' => 'Yearly',
    ),
  );
  $options = xmlsitemap_priority_options('default');
  $options['-2'] = t('Calculated from the menu items weight');
  $form['xmlsitemap_menu']['xmlsitemap_menu_priority'] = array(
    '#type' => 'select',
    '#title' => t('Menu items priority'),
    '#description' => t("The priority assigned to the menu items."),
    '#default_value' => variable_get('xmlsitemap_menu_priority', -2.0),
    '#options' => $options,
  );
  $options = array();
  $result = db_query("SELECT menu_name, title FROM {menu_custom}");
  while ($menu = db_fetch_array($result)) {
    $options[$menu['menu_name']] = empty($menu['title']) ? $menu['menu_name'] : $menu['title'];
  }
  $default_values = variable_get('xmlsitemap_menu_menus', array('menu-xmlsitemap'));
  // If a menu is not present, remove it from the default settings.
  foreach ($default_values as $opt) {
    if (!isset($options[$opt])) {
      unset($default_values[$opt]);
    }
  }
  if (!empty($options)) {
    $form['xmlsitemap_menu']['xmlsitemap_menu_menus'] = array(
      '#type' => 'checkboxes',
      '#title' => t('Menus to include in the sitemap'),
      '#default_value' => $default_values,
      '#options' => $options,
      '#checkall' => TRUE,
    );
  }
}

/**
 * Implementation of hook_xmlsitemap_description().
 */
function xmlsitemap_menu_xmlsitemap_description() {
  return '<dt>'. t('XML sitemap menu') .'</dt>'.
    '<dd>'. t('The module allows menu items to be added to the sitemap. You can choose the menus to include on the XML sitemap administration page and can add and remove menu items on the <a href="@menu">menu administration</a> page. The priority of a menu item is determined by its weight.', array('@menu' => url('admin/build/menu'))) .'</dd>';
}

/**
 * Implementation of hook_xmlsitmap_links().
 */
function xmlsitemap_menu_xmlsitemap_links() {
  $menus = array_filter(variable_get('xmlsitemap_menu_menus', array('menu-xmlsitemap')), 'is_string');
  foreach ($menus as $menu) {
    $result = db_query("SELECT ml.mlid
      FROM {menu_links} ml
      LEFT JOIN {menu_router} m ON m.path = ml.router_path
      WHERE  ml.menu_name = '%s'
      ORDER BY ml.mlid ASC",
      $menu
    );
    $row = new stdClass();
    $row->module = 'xmlsitemap_menu';
    $row->type = 'menu';
    $priority = variable_get('xmlsitemap_menu_priority', -2.0);
    while ($mlid = db_result($result)) {
      $link = menu_link_load($mlid);
      // Avoid external links, or links to the front page;
      // both have $link['external'] set to 1.
      if (!$link['external'] && !$link['hidden'] && $link['access'] == 1) {
        $row->loc = $link['href'];
        $changefreq = variable_get('xmlsitemap_menu_menus_changefreq', 3600);
        $row->changed = REQUEST_TIME - $changefreq;
        $row->changefreq = $changefreq;
        if ($priority == -2.0) {
          $row->priority = 1.0 - min(max(round(($link['weight'] + 50) / 100, 1), 0.0), 1.0);
        }
        else {
          if (!isset($priority)) {
            $priority = -1.0;
          }
          $row->priority = $priority;
        }
        $old_row = db_fetch_object(db_query("SELECT lid, type, priority FROM {xmlsitemap} WHERE loc = '%s'", $row->loc));
        if ($old_row === FALSE) {
          drupal_write_record('xmlsitemap', $row);
        }
        elseif ($old_row->type == 'menu' && $old_row->priority != $row->priority) {
          $row->lid = $old_row->lid;
          drupal_write_record('xmlsitemap', $row, 'lid');
        }
      }
    }
  }
}

/*****************************************************************************
 * Menu callbacks / form builders, submit/validate functions.
 ****************************************************************************/

/**
 * Add submit actions to forms.
 */
function xmlsitemap_menu_update_sitemap_submit($form, &$form_state) {
  xmlsitemap_flag_sitemap();
}

/**
 * @} End of "addtogroup xmlsitemap".
 */
