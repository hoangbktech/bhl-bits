<?php
// $Id: internet_archive.module,v 1.0.0.0 2011/01/18 4:44:44 dlheskett $

/** internet_archive.module
 *
 * Copyright (c) 2010-2011 Missouri Botanical Garden 
 *
 * @author: David L. Heskett (contractor: Adaptive Solutions Group)
 * @date Created: 01/18/2011
 *
 */

// http://www.archive.org/help/abouts3.txt

//define('IMPORT_DIR_PATH_FILES', '/sites/default/files/');


$includePath = dirname(__FILE__) . '/';

require_once($includePath . 'InternetArchiveModel.php');

/**
 * internet_archive_view - 
 */
function internet_archive_view(&$node, $teaser = FALSE, $page = FALSE)
{
	//echo 'here i am';
}

/**
 * internet_archive_cron - 
 */
function internet_archive_cron(&$node = null, $teaser = FALSE, $page = FALSE)
{
	// we need an off switch if processed that file.
	watchmen('Internet Archive cron');
	processInternetArchive();
}

/**
 * internet_archive_node_info - 
 */
function internet_archive_node_info()
{
	return array(
		'internet_archive' => array(
			'name'         => t('internet_archive'),
			'module'       => 'internet_archive',
			'description'  => t('Citebank Importer: Data import module for bringing in external data from various sources. Imports to Biblio records using a CSV file and the data files put in as attachments.'),
			'has_title'    => TRUE,
			'title_label'  => t('CiteBank Importer'),
			'has_body'     => FALSE
//			'' => '',
		)
	);
}



// ************************************************************
//  process import methods
// ************************************************************

/**
 *  processInternetArchive - 
 */
function processInternetArchive()
{
	$x = new InternetArchiveModel();
	$records = array();
	$limitFlag = false;
	$threshold = 2500;
	$limitSize = 100;
	
	$total = $x->getCountRecordsToDeliver();
	
	if ($total > 0) {
		if ($total > $threshold) {
			$limitFlag = true;
		}
		
		$records = $x->getRecordsToDeliver($limitFlag, $limitSize);
		
		foreach ($records as $record) {
			//$record;
			// put the record to IA
			$filename = $record['filename'];
			$filepath = $record['filepath'];
			$title    = $record['title'];
			
			$sitepath = getServerName();
			
			//$uploadFile = dirname(__FILE__).'/'.$item; // File to upload
			$uploadFile = $sitepath . '/' . $filepath; // File to upload

			$bucket = uniqid('citebanktest_'.date('YmdHis').'_'); // bucket
			
			//TODO: uncomment: $errorPut = $x->putItem($uploadFile, $bucket);

			if ($errorPut) {
				watchmen('Error IA ' . $filename . ' ' . $title);
			}
		}
		
	} else {
		// nothing to do
	}
	
}


// ************************************************************
// ************************************************************

/**
 *  shortFileName - 
 */
function shortFileName($filename)
{
	$x = explode('/', $filename);
	
	$count = count($x);
	
	$file = $x[$count - 1];
	
	return $file;
}

/**
 *  filter - 
 */
function filter($data)
{
	$filtered = stripslashes($data);
	
	return $filtered;
}

/**
 *  getLinkPath - 
 */
function getLinkPath()
{
	$linkPath = '';
	
	$hostSiteUrl = getServerName();
	
	$linkPath = 'http://' . $hostSiteUrl;
	
	return $linkPath;
}

/**
 * getServerName - build a correct file path to the data store for the given file name.
 */
function getServerName()
{
	$servername = @$_SERVER['SERVER_NAME'];

	if (!$servername) {
		$rootplus = docRootPath();
		
		// problem, $_SERVER['DOCUMENT_ROOT'];  is not available via command line call, we get an empty string.
		// remedy, below.
		// cleverness here:
		// all the code sitting under drupal resides in 'sites/all', so it's a good key to split on cleanly
		// so, we have something like:
		//  /var/www/test3.citebank.org/sites/all/more/dirs/here...
		// we want:
		//  /var/www/test3.citebank.org/
		// so drop everything after including 'sites/all....'
		//
		$parts = explode('sites/all', $rootplus);
		$root = $parts[0];

		$servername = str_replace('/var/www/', '', $root);
	}
	
	$servername = rtrim($servername, '/');

	return $servername;
}

/**
 * docRootPath - get us a path, we have some odd issue with our server not being set correctly, so attempt a remedy
 */
function docRootPath()
{
	$path1 = $_SERVER['DOCUMENT_ROOT'];
	$path2 = $_SERVER['PWD'];
	
	$path = ($path1 ? $path1 : $path2);
	
	return $path;
}

//watchdog($type, $message, $variables = array(), $severity = WATCHDOG_NOTICE, $link = NULL);
/**
 * watchmen - handy drupal watch logger, give it a msg and go
 */
function watchmen($msg, $watchFlag = true, $type = 'InternetArchive', $addDate = true)
{
	if ($watchFlag) {
		if ($addDate) {
			$msg .= ' ' . date('YmdHis');
		}
		
		watchdog($type, $msg);  // drupal system call
	}
}

// ************************************************************
// ************************************************************
