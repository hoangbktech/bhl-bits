<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:si="http://www.springframework.org/schema/integration"
	xmlns:stream="http://www.springframework.org/schema/integration/stream"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/integration/stream 
        http://www.springframework.org/schema/integration/stream/spring-integration-stream-2.0.xsd
        http://www.springframework.org/schema/integration 
        http://www.springframework.org/schema/integration/spring-integration.xsd">

	<!-- Necessary to use Annotations such as @Publisher, @ServiceActivator -->
	<si:annotation-config default-publisher-channel="default" />
	<si:channel id="default" />
	
	<bean id="PackageDeliveryService" class="at.co.ait.domain.services.PackageDeliveryService" />

	<!-- GateWayProxy to kick-off processing of DigitalObjects -->
	<si:gateway id="prepDigObjGateway" service-interface="at.co.ait.domain.integration.IPrepDigObjGateway"
		default-request-channel="extractTechnicalMetadata" />
		
	<si:gateway id="prepInfPkgGateway" service-interface="at.co.ait.domain.integration.IPrepInfPkgGateway"
		default-request-channel="metsService" />

	<!-- Define a stdout channel for debugging purposes -->
	<si:channel id="out" />
	<stream:stdout-channel-adapter id="stdout"
		channel="out" append-newline="true" />

	<!-- Extract technical metadata from DigitalObject -->
	<si:service-activator input-channel="extractTechnicalMetadata"
		output-channel="extractDigitalObjectType" method="enrichDigitalObject"
		ref="technicalMetadataExtractor" />
	<bean id="technicalMetadataExtractor" class="at.co.ait.domain.services.TechMetadataExtractionService" />

	<!-- Extract DigitalObjectType from DigitalObject -->
	<si:service-activator input-channel="extractDigitalObjectType"
		output-channel="routeMetadata" method="enrichDigitalObject"
		ref="digitalObjectTypeExtractor" />
	<bean id="digitalObjectTypeExtractor" class="at.co.ait.domain.services.DigitalObjectTypeExtractor" />

	<si:router input-channel="routeMetadata"
		expression="payload.getObjecttypeIdx() == 3 ? 'extractDescrMetadata' : 'routeImages'" />
	
	<si:router input-channel="routeImages"
		expression="payload.getObjecttypeIdx() == 2 ? 'convertImages' : 'addDigitalObject'" />
		
		
	<!-- Extract DigitalObjectType from DigitalObject -->
	<si:service-activator input-channel="convertImages"
		output-channel="addDigitalObject" method="enrichDigitalObject"
		ref="convertImageService" />
	<bean id="convertImageService" class="at.co.ait.domain.services.ConvertImageService" />

	<!-- Extract DigitalObjectType from DigitalObject -->
	<si:service-activator input-channel="extractDescrMetadata"
		output-channel="addDigitalObject" method="enrichDigitalObject"
		ref="descrMetadataExtractor" />
	<bean id="descrMetadataExtractor" class="at.co.ait.domain.services.DescrMetadataMapService" />

	<si:service-activator input-channel="addDigitalObject"
		method="addDigObjToInfPkg" ref="PackageDeliveryService" />
		
	<si:service-activator input-channel="metsService" output-channel="createAIPService"
		method="enrichInformationPackageObject" ref="metsMarshallerService" />
	<bean id="metsMarshallerService" class="at.co.ait.domain.services.MetsMarshallerService" />
	
	<si:service-activator input-channel="createAIPService"
		method="createAIP" ref="PackageDeliveryService" />

</beans>



